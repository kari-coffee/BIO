# a) [23/23]
# b) LRRR [2/2]
# c) 999,999 Ls, 0 Rs [3/3]
# d) No, as promenades represent values that are generated by adding values only,
# and the lowest value a promenade can take is 1, so it never goes below 0 [2/3]

while True:
    letters = input()
    l = 1
    m = 0
    r = 0
    s = 1

    bleft = [l, m]
    bright = [r, s]
    val = [1, 1]

    for c in letters:
        if c == 'L':
            bleft = val
            l, m = bleft
        else:
            bright = val
            r, s = bright
        val = [l+r, m+s]
            
    print(f"{val[0]} / {val[1]}")

